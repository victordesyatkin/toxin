mixin pagination(props = {})
    -
        let
            {
                src, start, end, current, text, label, altPrevious, altNext, limit,count, emptyString = '...',
            } = props;
            pages = [];
            isEmptyStart = true;
            isEmptyEnd = true;
            tmp = '';
            classesButtonPrevious = 'pagination__arrow pagination__arrow_previous' + (start === current ? ' pagination_hidden' : '');
            classesButtonNext = 'pagination__arrow pagination__arrow_next' + (end === current ? ' pagination_hidden' : '');
            tmpText = '';
        if (text && typeof text === 'string' && text.trim().length) {
            startText = (current - 1) * count > 0  ? current * count - count : current;
            endText = current * count > 0  ? current * count : current;
            total = end * count > 100 ? '100+' : end * count; 
            tmpText = `${startText} - ${endText} из ${total} ${text}`;
        }    
            classesSectionFooter = 'pagination__section-footer' + (typeof tmpText !== 'string' || !tmpText.trim().length ? ' pagination_hidden' : '');
        if (current - start > limit) {
            pages.push(start);
        }
        if (current - start > limit + 1) {
            pages.push(emptyString);
        }
        for(let i = current - limit; i <= current + limit; i++) {
            if (i < start) {
                continue;
            }
            if (i > end) {
                continue;
            }
            pages.push(i);
        }
        if (end - current > limit + 1) {
            pages.push(emptyString);
        }
        if (end - current > limit) {
            pages.push(end);
        }
    .pagination.js-pagination(data-start=start, data-limit=limit, data-end=end, data-current=current, data-text=text, data-count=count)
        if (start > 0 & end > 0)
            if (label)
                .pagination__section-header=label
            .pagination__section-body.js-pagination__section-body
                div(class=classesButtonPrevious, data-direction="prev")
                    .pagination__dummy
                    .pagination__content
                        if (src)
                            img(src=src, alt=altPrevious)
                each page in pages
                    - 
                        let
                            classes = 'pagination__item';
                            dataCurrent = 0;
                            if (page === emptyString) {
                                classes += ' pagination__item_empty';
                            } else if (page === current) {
                                classes += ' pagination__item_current';    
                                dataCurrent = 1;
                            }
                    div(class=classes, data-current=dataCurrent, data-item=page)
                        .pagination__dummy
                        .pagination__content=page
                div(class=classesButtonNext, data-direction="next")
                    .pagination__dummy
                    .pagination__content
                        if (src)  
                            img(src=src, alt=altNext)
            div(class=classesSectionFooter)=tmpText
                
