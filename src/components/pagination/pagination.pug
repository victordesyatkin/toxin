mixin pagination(o = {})
    -
        let
            { start = 0, end = 0, current = 0, text = '', label = '', altPrevious='previous_l10n', altNext = 'next_l10n', limit = 2, count = 12 } = o || {};
            pages = [];
            src = require('../../components/pagination/img/arrow_forward.svg').default;
            isEmptyStart = true;
            isEmptyEnd = true;
            emptyString = '...';
            tmp = '';
            hiddenPrevious = start !== current ? false : true;
            hiddenNext = end !== current ? false : true;
            tmpText = '';
        if (text && typeof text === 'string' && text.trim().length) {
            let startText = (current - 1) * count > 0  ? current * count - count : current;
            let endText = current * count > 0  ? current * count : current;
            let total = end * current > 100 ? '100+' : end * current; 
            tmpText = `${startText} - ${endText} из ${total} ${text}`;
        }    
            hiddenSectionFooter = typeof tmpText === 'string' && tmpText.trim().length ? false : true;
        if (current - start > limit) {
            pages.push(start);
        }
        if (current - start > limit + 1) {
            pages.push(emptyString);
        }
        for(let i = current - limit; i <= current + limit; i++) {
            if (i < start) {
                continue;
            }
            if (i > end) {
                continue;
            }
            pages.push(i);
        }
        if (end - current > limit + 1) {
            pages.push(emptyString);
        }
        if (end - current > limit) {
            pages.push(end);
        }
    .pagination(data-start=start, data-limit=limit, data-end=end, data-current=current, data-text=text, data-count=count)
        if (start > 0 & end > 0)
            if (label)
                .pagination__section-header
                    h3=label
            .pagination__section-body
                .pagination__arrow.pagination__arrow_previous(data-direction="prev", hidden=hiddenPrevious)
                    img(src=src, alt=altPrevious)
                div.pagination__common
                    each page in pages
                        - 
                            let
                                classes = 'pagination__item';
                                dataCurrent = 0;
                                if (page === emptyString) {
                                    classes += ' pagination__item_empty';
                                } else if (page === current) {
                                    classes += ' pagination__item_current';    
                                    dataCurrent = 1;
                                }
                        div(class=classes, data-current=dataCurrent, data-item=page)=page
                .pagination__arrow.pagination__arrow_next(data-direction="next", hidden=hiddenNext)
                    img(src=src, alt=altNext)
            .pagination__section-footer(hidden=hiddenSectionFooter)=tmpText
                
