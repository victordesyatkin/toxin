include ../title-label/title-label
include ../dropdown-title-text-field/dropdown-title-text-field
include ../control/control
include ../dropdown-item/dropdown-item

mixin dropdown(props)
  if props
    -
      let { dropdown = {}, textField, items = [], control } = props;
      let { isOpened, theme, title, buttonDecreaseText, buttonIncreaseText } = dropdown;
      let themes = {
          comfort: 'comfort'
      }
      let className = 'dropdown';
      let classNames = `${className} js-${className}`;
      classNames += isOpened ? ` ${className}_opened` : '';
      classNames += themes[theme] ? ` ${className}_theme_${themes[theme]}` : '';
    div(class=classNames)
      div(class=`${className}__title-text-field js-${className}__title-text-field`)
        +dropdown-title-text-field(props)
        - let length = items.length;
        if length
          div(class=`${className}__body`)
            ul(class=`${className}__items js-${className}__items`)
              each item in items
                li(class=`${className}__li-item js-${className}__li-item`)
                  +dropdown-item({...item, buttonDecreaseText: item.buttonDecreaseText || buttonDecreaseText, buttonIncreaseText: item.buttonIncreaseText || buttonIncreaseText})
            if control
              div(class=`${className}__control js-${className}__control`)
                +control(control)
//-         if (isControlVisible)
//-           .dropdown__main-control
//-             button.dropdown__control-button.dropdown__control-button_clean(
//-               type="button",
//-               name="clean"
//-             )= buttonCleanText
//-             button.dropdown__control-button.dropdown__control-button_apply(
//-               type="button",
//-               name="apply"
//-             )= buttonApplyText
